// <auto-generated />
using System;
using DocumentArchival.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DocumentArchival.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240609095713_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DocumentArchival.Models.bra01branches", b =>
                {
                    b.Property<int>("bra01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bra01uin"));

                    b.Property<string>("bra01address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bra01code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("bra01created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("bra01created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("bra01deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("bra01is_head_office")
                        .HasColumnType("bit");

                    b.Property<string>("bra01name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bra01set05uin_muncipality")
                        .HasColumnType("int");

                    b.Property<bool>("bra01status")
                        .HasColumnType("bit");

                    b.Property<string>("bra01telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("bra01updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("bra01updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("bra01uin");

                    b.HasIndex("bra01set05uin_muncipality");

                    b.ToTable("bra01branches");
                });

            modelBuilder.Entity("DocumentArchival.Models.dep01department", b =>
                {
                    b.Property<int>("dep01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("dep01uin"));

                    b.Property<string>("dep01code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dep01created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("dep01created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("dep01deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("dep01status")
                        .HasColumnType("bit");

                    b.Property<string>("dep01title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dep01updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("dep01updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("dep01uin");

                    b.ToTable("dep01departments");
                });

            modelBuilder.Entity("DocumentArchival.Models.des01designation", b =>
                {
                    b.Property<int>("des01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("des01uin"));

                    b.Property<string>("des01code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("des01created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("des01created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("des01deleted")
                        .HasColumnType("bit");

                    b.Property<string>("des01description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("des01status")
                        .HasColumnType("bit");

                    b.Property<string>("des01title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("des01updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("des01updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("des01uin");

                    b.ToTable("des01designations");
                });

            modelBuilder.Entity("DocumentArchival.Models.des02functional_title", b =>
                {
                    b.Property<int>("des02uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("des02uin"));

                    b.Property<string>("des02code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("des02created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("des02created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("des02deleted")
                        .HasColumnType("bit");

                    b.Property<string>("des02remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("des02status")
                        .HasColumnType("bit");

                    b.Property<string>("des02title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("des02updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("des02updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("des02uin");

                    b.ToTable("des02functional_titles");
                });

            modelBuilder.Entity("DocumentArchival.Models.emp01employee", b =>
                {
                    b.Property<int>("emp01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("emp01uin"));

                    b.Property<string>("emp01address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("emp01bra01uin")
                        .HasColumnType("int");

                    b.Property<string>("emp01code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("emp01created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("emp01created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("emp01deleted")
                        .HasColumnType("bit");

                    b.Property<int>("emp01dep01uin")
                        .HasColumnType("int");

                    b.Property<int>("emp01des01uin")
                        .HasColumnType("int");

                    b.Property<int>("emp01des02uin")
                        .HasColumnType("int");

                    b.Property<string>("emp01email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("emp01is_on_leave")
                        .HasColumnType("bit");

                    b.Property<int>("emp01lvl01uin")
                        .HasColumnType("int");

                    b.Property<string>("emp01mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emp01name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("emp01status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("emp01updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("emp01updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("emp01uin");

                    b.HasIndex("emp01bra01uin");

                    b.HasIndex("emp01dep01uin");

                    b.HasIndex("emp01des01uin");

                    b.HasIndex("emp01des02uin");

                    b.HasIndex("emp01lvl01uin");

                    b.ToTable("emp01employees");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil01document_summary", b =>
                {
                    b.Property<int>("fil01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fil01uin"));

                    b.Property<int>("fil01bra01uin")
                        .HasColumnType("int");

                    b.Property<DateTime>("fil01created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("fil01dep01uin")
                        .HasColumnType("int");

                    b.Property<string>("fil01owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fil01updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("file01created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file01updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fil01uin");

                    b.HasIndex("fil01bra01uin");

                    b.HasIndex("fil01dep01uin");

                    b.ToTable("fil01document_summaries");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil02document_detail", b =>
                {
                    b.Property<int>("fil02uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fil02uin"));

                    b.Property<DateTime>("fil02created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("fil02description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fil02docphysicallocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fil02doctitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fil02expirydate")
                        .HasColumnType("datetime2");

                    b.Property<int>("fil02fil01uin")
                        .HasColumnType("int");

                    b.Property<int>("fil02fil09uin")
                        .HasColumnType("int");

                    b.Property<int>("fil02fil10uin")
                        .HasColumnType("int");

                    b.Property<bool>("fil02isconfidential")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("fil02updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("fil02version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file02created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file02updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fil02uin");

                    b.HasIndex("fil02fil01uin");

                    b.HasIndex("fil02fil09uin");

                    b.HasIndex("fil02fil10uin");

                    b.ToTable("fil02Document_Details");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil03attach_document", b =>
                {
                    b.Property<int>("fil03uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fil03uin"));

                    b.Property<DateTime>("fil03created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("fil03created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fil03fil02uin")
                        .HasColumnType("int");

                    b.Property<string>("fil03name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fil03size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fil03updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("file03path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file03updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fil03uin");

                    b.HasIndex("fil03fil02uin");

                    b.ToTable("fil03attach_documents");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil04tag", b =>
                {
                    b.Property<int>("fil04uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fil04uin"));

                    b.Property<DateTime>("fil04created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("fil04created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("fil04fil02uin")
                        .HasColumnType("int");

                    b.Property<string>("fil04title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fil04updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("fil04updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fil04uin");

                    b.HasIndex("fil04fil02uin");

                    b.ToTable("fil04tags");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil05branch_permission", b =>
                {
                    b.Property<int>("fil05uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fil05uin"));

                    b.Property<int>("fil05bra01uin")
                        .HasColumnType("int");

                    b.Property<DateTime>("fil05created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("fil05created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fil05fil03uin")
                        .HasColumnType("int");

                    b.Property<int>("fil05permission_type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fil05updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("fil05updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fil05uin");

                    b.HasIndex("fil05bra01uin");

                    b.HasIndex("fil05fil03uin");

                    b.ToTable("fil05branch_permissions");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil06department_permission", b =>
                {
                    b.Property<int>("fil06uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fil06uin"));

                    b.Property<DateTime>("fil06created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("fil06created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fil06dep01uin")
                        .HasColumnType("int");

                    b.Property<int>("fil06fil03uin")
                        .HasColumnType("int");

                    b.Property<int>("fil06permission_type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fil06updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("fil06updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fil06uin");

                    b.HasIndex("fil06dep01uin");

                    b.HasIndex("fil06fil03uin");

                    b.ToTable("fil06department_permissions");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil07role_permission", b =>
                {
                    b.Property<int>("fil07uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fil07uin"));

                    b.Property<DateTime>("fil07created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("fil07created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fil07fil03uin")
                        .HasColumnType("int");

                    b.Property<int>("fil07permission_type")
                        .HasColumnType("int");

                    b.Property<int>("fil07rol01uin")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fil07updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("fil07updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fil07uin");

                    b.HasIndex("fil07fil03uin");

                    b.HasIndex("fil07rol01uin");

                    b.ToTable("fil07role_permissions");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil08user_permission", b =>
                {
                    b.Property<int>("fil08uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fil08uin"));

                    b.Property<DateTime>("fil08created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("fil08created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fil08emp01uin")
                        .HasColumnType("int");

                    b.Property<int>("fil08fil03uin")
                        .HasColumnType("int");

                    b.Property<int>("fil08permission_type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fil08updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("fil08updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fil08uin");

                    b.HasIndex("fil08emp01uin");

                    b.HasIndex("fil08fil03uin");

                    b.ToTable("fil08User_Permissions");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil09document_type", b =>
                {
                    b.Property<int>("fil09uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fil09uin"));

                    b.Property<DateTime>("fil09created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("fil09created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fil09title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fil09updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("fil09updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fil09uin");

                    b.ToTable("fil09document_types");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil10document_category", b =>
                {
                    b.Property<int>("fil10uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fil10uin"));

                    b.Property<DateTime>("fil10created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("fil10created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fil10fil09uin")
                        .HasColumnType("int");

                    b.Property<string>("fil10title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fil10updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("fil10updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fil10uin");

                    b.HasIndex("fil10fil09uin");

                    b.ToTable("fil10document_categories");
                });

            modelBuilder.Entity("DocumentArchival.Models.lvl01employee_level", b =>
                {
                    b.Property<int>("lvl01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("lvl01uin"));

                    b.Property<string>("lvl01code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("lvl01created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("lvl01created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("lvl01deleted")
                        .HasColumnType("bit");

                    b.Property<string>("lvl01description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("lvl01status")
                        .HasColumnType("bit");

                    b.Property<string>("lvl01title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("lvl01updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("lvl01updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("lvl01uin");

                    b.ToTable("lvl01employee_levels");
                });

            modelBuilder.Entity("DocumentArchival.Models.rol01role", b =>
                {
                    b.Property<int>("rol01uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rol01uin"));

                    b.Property<DateTime>("rol01created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("rol01created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("rol01deleted")
                        .HasColumnType("bit");

                    b.Property<int>("rol01emp01uin")
                        .HasColumnType("int");

                    b.Property<string>("rol01title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("rol01updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("rol01updated_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("rol01uin");

                    b.HasIndex("rol01emp01uin");

                    b.ToTable("rol01roles");
                });

            modelBuilder.Entity("DocumentArchival.Models.set03province", b =>
                {
                    b.Property<byte>("set03uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("set03uin"));

                    b.Property<string>("set03code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("set03created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("set03created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("set03deleted")
                        .HasColumnType("bit");

                    b.Property<string>("set03remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("set03status")
                        .HasColumnType("bit");

                    b.Property<string>("set03title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("set03updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("set03updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("set03uin");

                    b.ToTable("set03provinces");
                });

            modelBuilder.Entity("DocumentArchival.Models.set04district", b =>
                {
                    b.Property<byte>("set04uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("set04uin"));

                    b.Property<string>("set04code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("set04created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("set04created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("set04deleted")
                        .HasColumnType("bit");

                    b.Property<string>("set04remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("set04set03uin")
                        .HasColumnType("tinyint");

                    b.Property<bool>("set04status")
                        .HasColumnType("bit");

                    b.Property<string>("set04title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("set04updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("set04updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("set04uin");

                    b.HasIndex("set04set03uin");

                    b.ToTable("set04districts");
                });

            modelBuilder.Entity("DocumentArchival.Models.set05municipality", b =>
                {
                    b.Property<int>("set05uin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("set05uin"));

                    b.Property<string>("set05address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("set05code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("set05created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("set05created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("set05deleted")
                        .HasColumnType("bit");

                    b.Property<string>("set05remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("set05set04uin")
                        .HasColumnType("tinyint");

                    b.Property<bool>("set05status")
                        .HasColumnType("bit");

                    b.Property<string>("set05telphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("set05title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("set05type")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("set05updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("set05updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("set05uin");

                    b.HasIndex("set05set04uin");

                    b.ToTable("set05municipalities");
                });

            modelBuilder.Entity("DocumentArchival.Models.bra01branches", b =>
                {
                    b.HasOne("DocumentArchival.Models.set05municipality", "set05municipality")
                        .WithMany("bra01branches")
                        .HasForeignKey("bra01set05uin_muncipality")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("set05municipality");
                });

            modelBuilder.Entity("DocumentArchival.Models.emp01employee", b =>
                {
                    b.HasOne("DocumentArchival.Models.bra01branches", "bra01branches")
                        .WithMany("emp01employees")
                        .HasForeignKey("emp01bra01uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DocumentArchival.Models.dep01department", "dep01department")
                        .WithMany("emp01employees")
                        .HasForeignKey("emp01dep01uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DocumentArchival.Models.des01designation", "des01designation")
                        .WithMany("emp01employees")
                        .HasForeignKey("emp01des01uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DocumentArchival.Models.des02functional_title", "des02functional_title")
                        .WithMany("emp01employees")
                        .HasForeignKey("emp01des02uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DocumentArchival.Models.lvl01employee_level", "lvl01employee_level")
                        .WithMany("emp01employees")
                        .HasForeignKey("emp01lvl01uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bra01branches");

                    b.Navigation("dep01department");

                    b.Navigation("des01designation");

                    b.Navigation("des02functional_title");

                    b.Navigation("lvl01employee_level");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil01document_summary", b =>
                {
                    b.HasOne("DocumentArchival.Models.bra01branches", "bra01branches")
                        .WithMany("fil01document_summaries")
                        .HasForeignKey("fil01bra01uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DocumentArchival.Models.dep01department", "dep01department")
                        .WithMany("fil01document_summaries")
                        .HasForeignKey("fil01dep01uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bra01branches");

                    b.Navigation("dep01department");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil02document_detail", b =>
                {
                    b.HasOne("DocumentArchival.Models.fil01document_summary", "fil01document_summary")
                        .WithMany("fil02document_details")
                        .HasForeignKey("fil02fil01uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DocumentArchival.Models.fil09document_type", "fil09document_type")
                        .WithMany("fil02document_details")
                        .HasForeignKey("fil02fil09uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DocumentArchival.Models.fil10document_category", "fil10document_category")
                        .WithMany("fil02document_details")
                        .HasForeignKey("fil02fil10uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fil01document_summary");

                    b.Navigation("fil09document_type");

                    b.Navigation("fil10document_category");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil03attach_document", b =>
                {
                    b.HasOne("DocumentArchival.Models.fil02document_detail", "fil02document_detail")
                        .WithMany("fil03attach_documents")
                        .HasForeignKey("fil03fil02uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fil02document_detail");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil04tag", b =>
                {
                    b.HasOne("DocumentArchival.Models.fil02document_detail", "fil02document_detail")
                        .WithMany("fil04Tags")
                        .HasForeignKey("fil04fil02uin");

                    b.Navigation("fil02document_detail");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil05branch_permission", b =>
                {
                    b.HasOne("DocumentArchival.Models.bra01branches", "bra01branches")
                        .WithMany("fil05branch_permissions")
                        .HasForeignKey("fil05bra01uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DocumentArchival.Models.fil03attach_document", "fil03attach_document")
                        .WithMany("fil05branch_permissions")
                        .HasForeignKey("fil05fil03uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bra01branches");

                    b.Navigation("fil03attach_document");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil06department_permission", b =>
                {
                    b.HasOne("DocumentArchival.Models.dep01department", "dep01department")
                        .WithMany("fil06department_permissions")
                        .HasForeignKey("fil06dep01uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DocumentArchival.Models.fil03attach_document", "fil03attach_document")
                        .WithMany("fil06department_permissions")
                        .HasForeignKey("fil06fil03uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dep01department");

                    b.Navigation("fil03attach_document");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil07role_permission", b =>
                {
                    b.HasOne("DocumentArchival.Models.fil03attach_document", "fil03attach_document")
                        .WithMany("fil07role_permissions")
                        .HasForeignKey("fil07fil03uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DocumentArchival.Models.rol01role", "rol01role")
                        .WithMany("fil07Role_Permissions")
                        .HasForeignKey("fil07rol01uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fil03attach_document");

                    b.Navigation("rol01role");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil08user_permission", b =>
                {
                    b.HasOne("DocumentArchival.Models.emp01employee", "emp01employee")
                        .WithMany("fil08User_Permissions")
                        .HasForeignKey("fil08emp01uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DocumentArchival.Models.fil03attach_document", "fil03attach_document")
                        .WithMany("fil08user_permissions")
                        .HasForeignKey("fil08fil03uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("emp01employee");

                    b.Navigation("fil03attach_document");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil10document_category", b =>
                {
                    b.HasOne("DocumentArchival.Models.fil09document_type", "fil09document_type")
                        .WithMany("fil10Document_Categories")
                        .HasForeignKey("fil10fil09uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fil09document_type");
                });

            modelBuilder.Entity("DocumentArchival.Models.rol01role", b =>
                {
                    b.HasOne("DocumentArchival.Models.emp01employee", "emp01employee")
                        .WithMany("rol01roles")
                        .HasForeignKey("rol01emp01uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("emp01employee");
                });

            modelBuilder.Entity("DocumentArchival.Models.set04district", b =>
                {
                    b.HasOne("DocumentArchival.Models.set03province", "set03province")
                        .WithMany("set04districts")
                        .HasForeignKey("set04set03uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("set03province");
                });

            modelBuilder.Entity("DocumentArchival.Models.set05municipality", b =>
                {
                    b.HasOne("DocumentArchival.Models.set04district", "set04district")
                        .WithMany("set05municipalitys")
                        .HasForeignKey("set05set04uin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("set04district");
                });

            modelBuilder.Entity("DocumentArchival.Models.bra01branches", b =>
                {
                    b.Navigation("emp01employees");

                    b.Navigation("fil01document_summaries");

                    b.Navigation("fil05branch_permissions");
                });

            modelBuilder.Entity("DocumentArchival.Models.dep01department", b =>
                {
                    b.Navigation("emp01employees");

                    b.Navigation("fil01document_summaries");

                    b.Navigation("fil06department_permissions");
                });

            modelBuilder.Entity("DocumentArchival.Models.des01designation", b =>
                {
                    b.Navigation("emp01employees");
                });

            modelBuilder.Entity("DocumentArchival.Models.des02functional_title", b =>
                {
                    b.Navigation("emp01employees");
                });

            modelBuilder.Entity("DocumentArchival.Models.emp01employee", b =>
                {
                    b.Navigation("fil08User_Permissions");

                    b.Navigation("rol01roles");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil01document_summary", b =>
                {
                    b.Navigation("fil02document_details");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil02document_detail", b =>
                {
                    b.Navigation("fil03attach_documents");

                    b.Navigation("fil04Tags");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil03attach_document", b =>
                {
                    b.Navigation("fil05branch_permissions");

                    b.Navigation("fil06department_permissions");

                    b.Navigation("fil07role_permissions");

                    b.Navigation("fil08user_permissions");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil09document_type", b =>
                {
                    b.Navigation("fil02document_details");

                    b.Navigation("fil10Document_Categories");
                });

            modelBuilder.Entity("DocumentArchival.Models.fil10document_category", b =>
                {
                    b.Navigation("fil02document_details");
                });

            modelBuilder.Entity("DocumentArchival.Models.lvl01employee_level", b =>
                {
                    b.Navigation("emp01employees");
                });

            modelBuilder.Entity("DocumentArchival.Models.rol01role", b =>
                {
                    b.Navigation("fil07Role_Permissions");
                });

            modelBuilder.Entity("DocumentArchival.Models.set03province", b =>
                {
                    b.Navigation("set04districts");
                });

            modelBuilder.Entity("DocumentArchival.Models.set04district", b =>
                {
                    b.Navigation("set05municipalitys");
                });

            modelBuilder.Entity("DocumentArchival.Models.set05municipality", b =>
                {
                    b.Navigation("bra01branches");
                });
#pragma warning restore 612, 618
        }
    }
}
